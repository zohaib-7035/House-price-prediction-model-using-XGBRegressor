# -*- coding: utf-8 -*-
"""House price prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wIiYhut5nzg_BHUqoTyDvjfo65uVMIwq
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn import metrics
from xgboost import XGBRegressor
import sklearn.datasets

data_set= sklearn.datasets.fetch_california_housing()

print(data_set)

data_set_PD = pd.DataFrame(data_set.data, columns = data_set.feature_names)

print(data_set_PD)

data_set_PD['target']=data_set.target

print(data_set_PD)

data_set_PD.shape

data_set_PD.isnull().sum()

data_set_PD.describe()

cor_=data_set_PD.corr()

plt.figure(figsize=(10,10))
sns.heatmap(cor_, cbar=True, square=True, fmt='.1f', annot=True, annot_kws={'size':8}, cmap='Blues')

X=data_set_PD.drop(['target'],axis=1)
Y=data_set_PD["target"]

print(X)
print(Y)

train_X,test_X,train_Y,test_Y=train_test_split(X,Y,test_size=0.2,random_state=2)

print(X.shape,train_X.shape,test_X.shape)

model = XGBRegressor()

model.fit(train_X,train_Y)

# Here is the prediction

prediction=model.predict(train_X)

print(prediction)

score_1=metrics.r2_score(prediction,train_Y)
score_2=metrics.mean_absolute_error(prediction,train_Y)

print("R sq. Error is ", score_1)
print("MSE is ",score_2)

plt.scatter(prediction,train_Y)
plt.xlabel("ACtual Value")
plt.ylabel("Predicted Value")
plt.show()

prediction=model.predict(test_X)

score_1=metrics.r2_score(prediction,test_Y)
score_2=metrics.mean_absolute_error(prediction,test_Y)

print("R sq. Error is ", score_1)
print("MSE is ",score_2)



